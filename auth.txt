import { prisma } from "@/prisma/client";
import NextAuth from "next-auth";
import { PrismaAdapter } from "@auth/prisma-adapter";
import Credentials from "next-auth/providers/credentials";

export const { handlers, signIn, signOut, auth } = NextAuth({
  adapter: PrismaAdapter(prisma),
  providers: [
    Credentials({
      credentials: {
        email: {},
        password: {},
      },
      authorize: async (credentials) => {
        const user = await prisma.user.findUnique({
          where:{email:credentials.email as string}
        })
        if (
          user?.password === credentials.password 
        ) {
          return user;
        } else {
          return null;
        }
      },
    }),
  ],
  pages: {
    signIn: "/auth",
  },
  callbacks: {
    authorized: async ({ auth }) => {
      return !!auth;
    },
  },
  session:{
    strategy:'jwt'
  },
  trustHost: true,
});
.......................................................
form action={async (formData) => {
                "use server"
                await signIn("credentials", {
                    email: formData.get("email"),
                    password: formData.get("password")
                })
            }}